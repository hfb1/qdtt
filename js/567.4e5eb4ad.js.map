{"version":3,"file":"js/567.4e5eb4ad.js","mappings":"wJAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACA,EAAG,cAAc,CAACE,MAAM,CAAC,MAAQ,aAAaF,EAAG,WAAW,CAACG,GAAG,CAAC,OAASL,EAAIM,WAAW,CAACJ,EAAG,YAAY,CAACE,MAAM,CAAC,KAAO,SAAS,MAAQ,MAAM,SAAW,GAAG,YAAc,YAAY,MAAQ,CACpQ,CACEG,UAAU,EACVC,QAAS,YACTC,QAAS,mBAEVC,MAAM,CAACC,MAAOX,EAAIY,KAAKC,OAAQC,SAAS,SAAUC,GAAMf,EAAIgB,KAAKhB,EAAIY,KAAM,SAAUG,EAAK,EAACE,WAAW,iBAAiBf,EAAG,YAAY,CAACE,MAAM,CAAC,KAAO,WAAW,KAAO,OAAO,MAAQ,KAAK,SAAW,GAAG,YAAc,YAAY,MAAQ,CAC5O,CAAEG,UAAU,EAAMC,QAAS,WAAYC,QAAS,aAC/CC,MAAM,CAACC,MAAOX,EAAIY,KAAKM,KAAMJ,SAAS,SAAUC,GAAMf,EAAIgB,KAAKhB,EAAIY,KAAM,OAAQG,EAAK,EAACE,WAAW,eAAef,EAAG,MAAM,CAACiB,YAAY,CAAC,OAAS,SAAS,CAACjB,EAAG,aAAa,CAACE,MAAM,CAAC,MAAQ,GAAG,MAAQ,GAAG,KAAO,OAAO,cAAc,SAAS,SAAWJ,EAAIoB,UAAU,QAAUpB,EAAIoB,UAAU,eAAe,eAAe,CAACpB,EAAIqB,GAAG,WAAW,IAAI,IAAI,EAChW,EACGC,EAAkB,G,uCC2DtB,GACAC,OACA,OACAX,KAAAA,CACAC,OAAAA,cACAK,KAAAA,UAEAE,WAAAA,EAGA,EACAI,QAAAA,CAEA,kBACA,kBAEAC,QAAAA,IAAAA,SAAAA,GACA,IACA,MAAAF,KAAAA,SAAA,mBACAE,QAAAA,IAAAA,QAAAA,IACAC,EAAAA,EAAAA,GAAAA,CAAAC,KAAAA,UAAAnB,QAAAA,UACAoB,EAAAA,EAAAA,IAAAA,EAAAA,KAAAA,QAEAC,EAAAA,EAAAA,IAAAA,gBAAAA,EAAAA,KAAAA,eAGA,sBACAC,KAAAA,KAAAA,OAAAA,MAAAA,MAAAA,gBAKA,CAHA,UAEAJ,EAAAA,EAAAA,GAAAA,CAAAC,KAAAA,SAAAnB,QAAAA,WACA,CACA,iBACA,ICvG8P,I,UCO1PuB,GAAY,OACd,EACAhC,EACAuB,GACA,EACA,KACA,WACA,MAIF,EAAeS,EAAiB,O,gFCdzB,MAAMF,EAAa,CAACG,EAAKrB,KAC9BsB,aAAaC,QAAQF,EAAKrB,EAA1B,EAGWwB,EAAcH,GAClBC,aAAaG,QAAQJ,E","sources":["webpack://htqdtt/./src/views/Login/index.vue","webpack://htqdtt/src/views/Login/index.vue","webpack://htqdtt/./src/views/Login/index.vue?db08","webpack://htqdtt/./src/views/Login/index.vue?8e58","webpack://htqdtt/./src/utils/storage.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('van-nav-bar',{attrs:{\"title\":\"前端头条-登录\"}}),_c('van-form',{on:{\"submit\":_vm.onSubmit}},[_c('van-field',{attrs:{\"name\":\"mobile\",\"label\":\"手机号\",\"required\":\"\",\"placeholder\":\"请输入11位手机号\",\"rules\":[\n        {\n          required: true,\n          message: '请填写正确的手机号',\n          pattern: /^1[3-9]\\d{9}$/,\n        },\n      ]},model:{value:(_vm.user.mobile),callback:function ($$v) {_vm.$set(_vm.user, \"mobile\", $$v)},expression:\"user.mobile\"}}),_c('van-field',{attrs:{\"type\":\"password\",\"name\":\"code\",\"label\":\"密码\",\"required\":\"\",\"placeholder\":\"请输入6位数的密码\",\"rules\":[\n        { required: true, message: '请填写正确的密码', pattern: /^\\d{6}$/ },\n      ]},model:{value:(_vm.user.code),callback:function ($$v) {_vm.$set(_vm.user, \"code\", $$v)},expression:\"user.code\"}}),_c('div',{staticStyle:{\"margin\":\"16px\"}},[_c('van-button',{attrs:{\"round\":\"\",\"block\":\"\",\"type\":\"info\",\"native-type\":\"submit\",\"disabled\":_vm.isLoading,\"loading\":_vm.isLoading,\"loading-text\":\"正在登录ing...\"}},[_vm._v(\" 登录 \")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <van-nav-bar title=\"前端头条-登录\" />\r\n    <!-- van-form--整体表单组件\r\n        @submit：自定义事件（提交）\r\n        van-field：输入框\r\n        name：提交表单的标识符\r\n              表单整体提交时，默认收集（输入框的值）形成（一个对象）\r\n              往后台发送的参数就是name里的值\r\n              {\"用户名\":\"页面值\"}\r\n        label：输入框的左侧文本\r\n        :rules：表单校验规则（动态的） :属性名=\"表达式\"\r\n               required：必填项\r\n        required：小星星\r\n    -->\r\n    <van-form @submit=\"onSubmit\">\r\n      <van-field\r\n        v-model=\"user.mobile\"\r\n        name=\"mobile\"\r\n        label=\"手机号\"\r\n        required\r\n        placeholder=\"请输入11位手机号\"\r\n        :rules=\"[\r\n          {\r\n            required: true,\r\n            message: '请填写正确的手机号',\r\n            pattern: /^1[3-9]\\d{9}$/,\r\n          },\r\n        ]\"\r\n      />\r\n      <van-field\r\n        v-model=\"user.code\"\r\n        type=\"password\"\r\n        name=\"code\"\r\n        label=\"密码\"\r\n        required\r\n        placeholder=\"请输入6位数的密码\"\r\n        :rules=\"[\r\n          { required: true, message: '请填写正确的密码', pattern: /^\\d{6}$/ },\r\n        ]\"\r\n      />\r\n      <div style=\"margin: 16px\">\r\n        <!-- 按钮\r\n          round：是否为圆形，默认值为true\r\n          block：代表块级元素\r\n          type：类型\r\n          native-type：原生button标签的type属性（submit提交按钮）\r\n         -->\r\n        <van-button\r\n          round\r\n          block\r\n          type=\"info\"\r\n          native-type=\"submit\"\r\n          :disabled=\"isLoading\"\r\n          :loading=\"isLoading\"\r\n          loading-text=\"正在登录ing...\"\r\n        >\r\n          登录\r\n        </van-button>\r\n      </div>\r\n    </van-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Notify from '@/ui/Notify.js'\r\nimport { loginAPI } from '@/api'\r\nimport { setToken } from '@/utils/token'\r\nimport { setStorage } from '@/utils/storage'\r\nexport default {\r\n  data () {\r\n    return {\r\n      user: {\r\n        mobile: '13671898281', // 手机号\r\n        code: '246810'// 验证码（密码-必须是246810后台规定s的，无论手机是什么）\r\n      },\r\n      isLoading: false// 登录按钮的加载状态\r\n\r\n    }\r\n  },\r\n  methods: {\r\n    // 提交方法（form整体通过验证才会触发）\r\n    async onSubmit (values) {\r\n      this.isLoading = true\r\n      // 我们可以直接用values（收集参数名和值）\r\n      console.log('submit', values)\r\n      try {\r\n        const { data: res } = await loginAPI(this.user)\r\n        console.log('登入成功：', res)\r\n        Notify({ type: 'success', message: '登录成功' })\r\n        setToken(res.data.token)\r\n\r\n        setStorage('refresh_token', res.data.refresh_token)\r\n        // 跳转路由--replace不会产生历史记录\r\n        // 因为我们路由规则里layout没有重定向，所以直接在这里写全\r\n        this.$router.replace({\r\n          path: this.$route.query.path || '/layout/home'\r\n        })\r\n      } catch (error) {\r\n        // Promise内ajax抛出错误，直接进入这里\r\n        Notify({ type: 'danger', message: '账号或密码错误' })\r\n      }\r\n      this.isLoading = false\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=ecc9b2f2&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ecc9b2f2\",\n  null\n  \n)\n\nexport default component.exports","// 封装本地储存的方式\r\n// 整个项目使用localStorage，sessionStorage，还是cookie\r\n// 只需要改变这里即可\r\n// 封装：为了统一管理，方便以后的替换和修改\r\nexport const setStorage = (key, value) => {\r\n  localStorage.setItem(key, value)\r\n}\r\n\r\nexport const getStorage = (key) => {\r\n  return localStorage.getItem(key)\r\n}\r\nexport const removeStorage = (key) => {\r\n  localStorage.removeItem(key)\r\n}\r\n"],"names":["render","_vm","this","_c","_self","attrs","on","onSubmit","required","message","pattern","model","value","user","mobile","callback","$$v","$set","expression","code","staticStyle","isLoading","_v","staticRenderFns","data","methods","console","Notify","type","setToken","setStorage","path","component","key","localStorage","setItem","getStorage","getItem"],"sourceRoot":""}